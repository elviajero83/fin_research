import argparse
import os
import numpy as np
import pandas as pd
import logging
from utils import (
    merge_simultanous_rows,
    save_to_blob,
    standarize,
    normalize,
    scale,
    select_first_file,
    set_df_labels
)
from azureml.core import Run, Experiment, Workspace, Datastore, Dataset
from datetime import datetime, timedelta


def init():
    global default_datastore
    global trades_dataset_mountpoint
    # df_har_data = pd.read_csv(path_to_har)
    parser = argparse.ArgumentParser()
    parser.add_argument("--pt_level", default="0.0001")
    parser.add_argument("--sl_level", default="0.0001")
    parser.add_argument("--vol_tick", type=int, default="1000")
    parser.add_argument("--wait_time", type=int, default="600",
                        help="time delta in seconds")
    parser.add_argument(
        "--file_path",
        type=str,
        required=False,
        help="raw file",
    )
    parser.add_argument(
        "--trades_path",
        type=str,
        required=False,
        default='datasets/trades_merged_test',
        help="raw file",
    )

    global args
    args, _ = parser.parse_known_args()

    run = Run.get_context()
    if "_OfflineRun" in str(run):
        ws = Workspace.from_config()
    else:
        ws = Run.get_context().experiment.workspace

    default_datastore = ws.get_default_datastore()
    trades_dataset_mount = Dataset.File.from_files((default_datastore, args.trades_path)).mount()
    trades_dataset_mount.start()
    trades_dataset_mountpoint = trades_dataset_mount.mount_point


def run(mini_batch):
    print(f"run method start: {__file__}, run({mini_batch})")
    resultList = []

    for file_name in mini_batch:
        # read each file
        print("******  Processing {}".format(os.path.basename(file_name)))
        df_merged = pd.read_pickle(file_name)
        print(df_merged.shape)

        # reading the corresponding trades file
        # date_string = str(merged_df.loc[0, 'Date-Time'])[:10]
        trades_file_name = file_name.replace('mq', 'mt')
        df_merged_trades = pd.read_pickle(os.path.join(trades_dataset_mountpoint, trades_file_name))
        print("loaded the corresponding trades file from {}".format(
            os.path.join(trades_dataset_mountpoint, trades_file_name)))

        # calulating the tick indices
        vol = df_merged_trades['Acc Volume']
        vol_tick = args.vol_tick
        vol_levels = range(vol_tick, int(max(vol)), vol_tick)
        tick_times = []
        for level in vol_levels:
            ind = vol[vol > level].index.min()
            tick_times.append(df_merged_trades.loc[ind, 'Date-Time'])

        times = df_merged['Date-Time']
        inds = []
        for tick_time in tick_times:
            ind = times[times > tick_time].index.min()
            inds.append(ind)
        inds = [x for x in inds if x > 0]  # remove nans
        print("The indices for ticks:\n {}".format(inds))

        df_merged.dropna(inplace=True)
        # df_merged = df_merged.iloc[:1000, :].copy()
        # inds = [1399, 2653, 3026, 3057, 3458, 3973, 4717, 5510, 6247, 6905, 7905, 8759, 9729, 10468, 11172, 11998, 12786, 13818, 14899, 16102, 16847, 17634, 18670, 19346, 20035, 21165, 21637, 21969, 22360, 22920, 23669, 24634, 25556, 26313, 27086, 28365, 29095, 30252, 31336, 32206, 33239, 33959, 34485, 35610, 36391, 37291, 38134, 39068, 40019, 40858, 41325, 42123, 42950, 43538, 44554, 44943, 45262, 45913, 46766, 47522, 48652, 49541, 50053, 51487, 52534, 53332, 54106, 55071, 56299, 57023, 57692, 57900, 58330, 58876, 59720, 61248, 62331, 63489, 64118, 64762, 65120, 66283, 67578, 68446, 69694, 70241, 71290, 72779, 73371, 74391, 75302, 75836, 76370, 77743, 78449, 79567, 80335, 80860, 81372, 81904, 82569, 82795, 83655, 84591, 85095, 85427, 85859, 86664, 87832, 88337, 88949, 89994, 90821, 91511, 92657, 93527, 94046, 94343, 94929, 95416, 96379, 97296, 97950, 98849, 99771, 100723, 101657, 102654, 103620, 104836, 105363, 106052, 106539, 107312, 107783, 108688, 109054, 109361, 110131, 110829, 111291, 111758, 112583, 113305, 113986, 114821, 115503, 116076, 116531, 117124, 117519, 117864, 118840, 119634, 120474, 121561, 122349, 123130, 123703, 124390, 124747, 125208, 125570, 125994, 126507, 127055, 127757, 128393, 128700, 129116, 129612, 130249, 131027, 131596, 132309, 132820, 133556, 134318, 134987, 135692, 136172, 137020, 137606, 138068, 138553, 139043, 139695, 140402, 140914, 141452, 141677, 142280, 142807, 143462, 143887, 144434, 145282, 145765, 146238, 146624, 147173, 147853, 148378, 148915, 149522, 150057, 150571, 150749, 151427, 151787, 152330, 153061, 153434, 153879, 154704, 155261, 155804, 156495, 156940, 157577, 158292, 158841, 159229, 159715, 160144, 160568, 160985, 161302, 161591, 161786, 161948, 162245, 162598, 162932, 163375, 163900, 164196, 164764, 165236, 165892, 166420, 166610, 167038, 167485, 168089, 168640, 168766, 169179, 169423, 169778, 170145, 170600, 171056, 171292, 171573, 172198, 172699, 173263, 173732, 174137, 174269, 174647, 174990, 175131, 175487, 175838, 176100, 176441, 176761, 177236, 177691, 178290, 178717, 179064, 179533, 179959, 180501, 180880, 181534, 182104, 182621, 183381, 183935, 184493, 184980, 185457, 185694, 185833, 186047, 186546, 187086, 187397, 187751, 188253, 188952, 189498, 189957, 190586, 191136, 191673, 192104, 192387, 192791, 192959, 193494, 193637, 193827, 194180, 194450, 194767, 195027, 195343, 195719, 195873, 196384, 196946, 197250, 197716, 197750, 198088, 198405, 198741, 199072, 199403, 199515, 199672, 199871, 200006, 200207, 200430, 200689, 201127, 201154, 201513, 201837, 201926, 202305, 202522, 202665, 203113, 203622, 204138, 204533, 204935, 205485, 206000, 206362, 206849, 207267, 207805, 208231, 208484, 208904, 209210, 209547, 209928, 210263, 210590, 210762, 211161, 211562, 211848, 212129, 212688, 213068, 213327, 213792, 214141, 214426, 214741, 215254, 215719, 216354, 216868, 217385, 217852, 218247, 218749, 219154, 219669, 220038, 220607, 221107, 221622, 221790, 221982, 222401, 222961, 223511, 223962, 224605, 225059, 225329, 225673, 226103, 226549, 226954, 227405, 227798, 228379, 229028, 229490, 229772, 230065, 230666, 231155, 231561, 231913, 231959, 232076, 232274, 232459, 232623, 233229, 233847, 234338, 234820, 235464, 236144, 236635, 237178, 237643, 237885, 238347, 238827, 239368, 239811, 240528, 240989, 241345, 241790, 242148, 242694, 243204, 243601, 244017, 244611, 245201, 245880, 246282, 246477, 247008, 247194, 247404, 248059, 248712, 249295, 249681, 250063, 250399, 250989, 251367, 251631, 252058, 252375, 252866, 253214, 253911, 254627, 255238, 255544, 255979, 256547, 257170, 257692, 257897, 258066, 258577, 258738, 258899, 259032, 259277, 259646, 260067, 260463, 260881, 261383, 262156, 262546, 262873, 263273, 263746, 263999, 264304, 264785, 265176, 265554, 265955, 266291, 266842, 267328, 267806, 268520, 268805, 269094, 269565, 270040, 270550, 270957, 271485, 272276, 272659, 273311, 273837, 274320, 274891, 275382, 275947, 276332, 276814, 277463, 278080, 278600, 279170, 279535, 280109, 280827, 281277, 281555, 281796, 282026, 282432, 283022, 283239, 283607, 283956, 284233, 284767, 285139, 285686, 286352, 286768, 286873, 287069, 287297, 287791, 288370, 288807, 289293, 289662, 290233, 290702, 291582, 292123, 292652, 293577, 294092, 294537, 294867, 295441, 296082, 296768, 297479, 297717, 298125, 298314, 298590, 299051, 299575, 299813, 300265, 300914, 301556, 302062, 302184, 302532, 302736, 302977, 303200, 303599, 303874, 304304, 304921, 305302, 305754, 306261, 306847, 307440, 307739, 308028, 308419, 308758, 309048, 309483, 309518, 309813, 310304, 310793, 311237, 311434, 311689, 312224, 312597, 313117, 313544, 313935, 314221, 314488, 314864, 315191, 315361, 315622, 315888, 316021, 316373, 316661, 317014, 317674, 318071, 318504, 318895, 319318, 319609, 319820, 320511, 321069, 321641, 321985, 322451, 322735, 323091, 323673, 324212, 324703, 325025, 325501, 326201, 326724, 326799, 326932, 327100, 327344, 327545, 327999, 328335, 328435, 328749, 328979, 329571, 329766, 330333, 331137, 331776, 332373, 332887, 333308, 333611, 334137, 334491, 335118, 335530, 336053, 336708, 337428, 337928, 338413, 339032, 339845, 340291, 340607, 340751, 340933, 341051, 341206, 341373, 341570, 341683, 341883, 342181, 342436, 342544, 342670, 343123, 343625, 343793, 344361, 344647, 345023, 345518, 346101, 346456, 346787, 347083, 347341, 347645, 347855, 348067, 348255, 348675, 348935, 349463, 349600, 350076, 350400, 350938, 351626, 352220, 352740, 352986, 353217, 353716, 353989, 354654, 355286, 355731, 356255, 356934, 357507, 357840, 358304, 358841, 359326, 360010, 360391, 360965, 361415, 362081, 362284, 362581, 362919, 363444, 363984, 364670, 365378, 365989, 366456, 367162, 367746, 368182, 368629, 368985, 369268, 369464, 369999, 370523, 371080, 371363, 371886, 372332, 372647, 373111, 373774, 374265, 374798, 375192, 375771, 376183, 376754, 377014, 377651, 378349, 378828, 379295, 379852, 380681, 381398, 381867, 382619, 383045, 383380, 383847, 384502, 385153, 385722, 386495, 386907, 387500, 388012, 388622, 388974, 389284, 389582, 389763, 389970, 390109, 390203, 390546, 390801, 391114, 391537, 391739, 392047, 392277, 392836, 393227, 393701, 394095, 394172, 394308, 394751, 395104, 395448, 395715, 395817, 396187, 396537, 396947, 397239, 397682, 397769, 398014, 398128, 398447, 398837, 399307, 399736, 400306, 400751, 401372, 401795, 402082, 402359, 402851, 403309, 403797, 404300, 404851, 405229, 405634, 406069, 406543, 406615, 406982, 407145, 407502, 408032, 408485, 408919, 409334, 409686, 410074, 410190, 410633, 410993, 411471, 412055, 412461, 412858, 413226, 413524, 413879, 414394, 415009, 415291, 415631, 416126, 416560, 417070, 417439, 417835, 418347, 418796, 419192, 419369, 419489, 419583, 419927, 420401, 420810, 421374, 421842, 422239, 422585, 423098, 423553, 423731, 424103, 424558, 425072, 425696, 426010, 426449, 426721, 427119, 427294, 427641, 427782, 427970, 428376, 428690, 429015, 429256, 429524, 429803, 430165, 430370, 430756, 431088, 431366, 431564, 431938, 432180, 432378, 432598, 432853, 433266, 433748, 433895, 434285, 434659, 434935, 435265, 435698, 436072, 436488, 436972, 437367, 437752, 437978, 438519, 438926, 439184, 439505, 439895, 440235, 440535, 440712, 441301, 441717, 442087, 442395, 442848, 443197, 443477, 443781, 443823, 444180, 444433, 444782, 445001, 445301, 445462, 445622, 446009, 446524, 446689, 446890, 447338, 447580, 448127, 448673, 449260, 449884, 450521, 450950, 451489, 451664, 452016, 452400, 452586, 452947, 453500, 454025, 454354, 454974, 455323, 455686, 456124, 456669, 457076, 457413, 457891, 458510, 459043, 459598, 460155, 460687, 461159, 461634, 461789, 462371, 462886, 463340, 463419, 463841, 463955, 464314, 464407, 464641, 465166, 465508, 465704, 466078, 466554, 467043, 467369, 467908, 468218, 468668, 469076, 469482, 470160, 470729, 471216, 471788, 472570, 473245, 473682, 474037, 474521, 475020, 475594, 476003, 476448, 476920, 477524, 477856, 478458, 478992, 479247, 479703, 480302, 480607, 481105, 481659, 482259, 482535, 482831, 483497, 483977, 484661, 485020, 485641, 485820, 486354, 486848, 487310, 487737, 488213, 488812, 489256, 489580, 489960, 490597, 491155, 491694, 492204, 492814, 493243, 493642, 494028, 494307, 494735, 495407, 495894, 496475, 496840, 497763, 498868, 499368, 499989, 501159, 502114, 502504, 503077, 503434, 503744, 504213, 504446, 504748, 505010, 505583, 506162, 506592, 507287, 507450, 507931, 508473, 508934, 509383, 509924, 510471, 510944, 511123, 511287, 511736, 512244, 512566, 512937, 513413, 513723, 513954, 514322,
        #         514624, 515281, 515969, 516654, 517272, 518099, 518533, 519061, 519982, 520800, 521249, 521690, 522049, 522534, 523097, 523885, 524238, 524661, 525216, 526072, 526743, 527664, 528629, 529545, 530175, 530745, 531288, 532100, 532925, 533677, 534152, 534532, 535015, 535669, 536352, 536954, 537510, 537762, 538437, 538789, 539303, 539926, 540444, 540805, 540932, 541338, 541613, 541746, 542163, 542744, 543108, 543539, 543952, 544285, 544935, 545759, 546533, 547024, 547619, 548102, 548768, 549399, 550025, 550793, 551481, 551687, 551965, 552511, 553117, 553692, 554277, 555151, 556098, 556871, 557328, 557723, 558034, 558151, 558307, 558545, 558951, 559422, 560109, 560816, 561321, 561693, 561937, 562462, 562916, 563515, 563952, 564560, 565077, 565865, 566632, 567245, 567954, 568622, 569060, 569448, 569860, 570452, 571006, 571385, 571750, 571935, 572269, 572499, 572677, 573136, 573380, 573480, 573834, 574366, 574990, 575605, 575719, 576160, 576566, 577024, 577430, 577893, 578270, 578705, 579108, 579479, 580280, 580900, 581643, 582157, 582474, 583105, 583956, 584599, 585099, 585918, 586667, 587171, 587691, 588066, 588553, 588905, 589546, 589878, 590189, 590250, 590638, 590806, 591155, 591875, 592614, 592998, 593363, 594053, 594811, 595505, 596031, 596503, 596994, 597525, 597818, 598407, 598999, 599697, 600374, 600726, 601503, 602202, 602599, 603028, 603523, 604357, 604947, 605365, 605924, 606298, 606859, 607006, 607480, 608002, 608766, 609360, 609592, 610021, 610601, 611180, 611770, 612306, 612964, 613582, 614009, 614728, 615378, 616024, 616648, 617160, 617372, 617629, 618220, 618703, 619235, 619544, 619890, 620384, 621025, 621632, 622037, 622777, 623458, 624243, 624802, 625585, 625833, 626423, 626898, 627431, 628041, 628588, 628665, 629235, 629437, 629895, 630420, 630500, 630724, 631066, 631621, 632187, 632662, 633336, 633677, 634316, 634896, 635176, 635737, 636249, 636817, 637450, 637756, 638247, 638991, 639770, 640040, 640686, 641088, 641510, 641997, 642336, 642968, 643656, 643952, 644474, 644899, 645268, 645924, 646666, 647349, 648024, 648685, 648990, 649500, 650161, 650952, 651522, 651878, 652149, 652654, 653187, 653520, 653879, 654365, 654950, 655102, 655289, 655674, 655792, 656112, 656846, 657801, 658607, 659503, 660324, 661181, 661885, 662464, 663379, 664133, 664974, 665435, 666199, 666723, 667433, 668049, 668678, 669477, 670429, 671650, 672496, 673296, 674237, 675018, 675945, 676886, 677424, 678034, 678902, 679833, 680842, 681623, 682071, 682410, 683251, 683629, 684211, 684668, 685039, 685918, 686979, 687845, 688816, 689470, 689995, 690659, 691359, 692085, 692902, 693549, 694273, 694707, 694795, 695174, 695822, 696373, 696998, 697711, 698337, 698767, 699227, 699913, 700738, 701397, 701552, 701965, 702427, 702886, 703392, 703917, 704212, 704687, 705234, 705649, 706141, 706470, 706998, 707267, 707400, 707874, 708263, 708463, 708912, 708995, 709399, 709483, 709858, 710281, 710832, 711343, 711939, 712479, 712784, 713355, 713890, 714551, 714871, 715415, 715732, 716197, 716985, 717824, 718083, 718869, 719562, 720385, 720781, 721522, 722107, 722597, 722813, 723336, 723452, 723792, 724276, 724451, 724852, 725310, 725610, 725664, 725813, 726327, 726750, 727239, 727893, 728173, 728611, 729061, 729472, 729724, 730114, 730450, 731081, 731681, 732400, 732919, 733558, 733957, 734347, 734694, 735272, 735661, 736150, 736495, 736869, 737335, 737830, 738438, 739014, 739540, 739972, 740594, 741134, 741749, 741808, 742202, 742517, 742970, 743481, 743715, 743715, 743786, 743936, 744203, 744699, 745276, 745663, 746037, 746659, 747189, 747594, 748125, 748763, 749269, 749713, 750232, 750987, 751652, 752260, 752803, 753536, 753921, 754430, 754962, 755525, 755998, 756266, 756523, 757056, 757775, 758527, 759144, 759822, 760616, 761360, 761861, 762207, 762576, 763077, 763693, 764284, 764801, 765466, 766250, 766769, 767386, 768181, 768687, 769238, 769838, 770209, 770557, 771049, 771630, 772254, 772492, 773026, 773449, 773978, 774625, 775106, 775767, 776370, 776917, 777510, 778194, 778989, 779927, 780318, 780559, 780898, 781328, 781770, 782265, 782606, 783042, 783340, 783565, 783803, 784117, 784405, 784493, 784682, 784973, 785208, 785447, 785874, 786478, 787015, 787420, 787799, 788100, 788365, 788570, 788845, 789281, 789630, 790082, 790392, 790805, 791170, 791317, 791818, 792147, 792467, 792952, 793398, 793969, 794489, 794937, 795468, 796144, 796457, 796764, 797524, 798186, 798769, 799289, 799886, 800416, 801125, 801697, 802214, 802749, 803393, 803821, 804360, 804667, 804845, 805238, 805481, 805717, 806272, 806756, 807192, 807726, 808109, 808265, 808345, 808601, 808978, 809513, 809867, 810196, 810582, 811027, 811546, 812084, 812559, 812879, 813392, 813817, 814351, 815117, 815628, 816053, 816490, 816646, 816833, 816873, 817116, 817616, 817902, 818233, 818743, 819091, 819490, 820109, 820530, 820929, 821062, 821537, 822046, 822227, 822499, 822941, 823388, 823819, 823961, 824440, 824783, 824916, 825050, 825486, 825729, 825948, 826306, 826694, 827120, 827654, 828145, 828705, 829285, 829824, 830510, 830913, 831270, 831813, 831968, 832212, 832791, 833234, 834050, 834492, 834941, 835358, 835833, 836223, 836723, 837137, 837417, 837543, 838135, 838668, 838951, 839249, 839605, 839967, 840269, 840404, 840836, 840980, 841325, 841909, 842308, 842645, 842980, 843333, 843621, 844026, 844231, 844707, 845057, 845419, 845813, 846013, 846225, 846359, 846543, 846667, 846864, 847074, 847286, 847377, 847549, 847916, 848293, 848478, 848768, 848929, 849247, 849556, 849956, 850342, 850790, 851243, 851614, 852202, 852648, 853088, 853414, 853674, 853963, 854369, 854802, 855085, 855577, 855994, 856577, 857015, 857351, 857740, 858091, 858421, 858802, 859120, 859370, 859737, 860018, 860326, 860618, 860951, 861417, 861840, 862122, 862527, 862784, 862992, 863261, 863568, 863921, 864227, 864718, 864983, 865275, 865677, 865996, 866292, 866690, 867261, 867568, 867928, 868625, 868885, 869007, 869067, 869115, 869412, 869620, 870026, 870320, 870723, 870873, 871133, 871345, 871790, 872100, 872395, 872672, 872974, 873345, 873627, 873982, 874214, 874500, 874610, 874831, 874908, 875119, 875408, 875803, 876193, 876618, 877125, 877476, 877980, 878393, 878801, 879205, 879581, 880066, 880434, 880977, 881454, 881717, 882024, 882351, 882790, 883196, 883610, 884223, 884675, 884977, 885515, 885854, 886298, 886612, 887001, 887241, 887546, 887781, 888126, 888404, 888685, 889109, 889376, 889896, 890271, 890523, 891007, 891296, 891662, 891826, 892137, 892525, 892881, 893285, 893564, 893827, 894175, 894387, 894558, 894862, 895079, 895234, 895506, 895711, 896037, 896409, 896551, 896848, 897172, 897368, 897606, 897878, 898281, 898513, 898678, 898780, 898976, 899277, 899331, 899425, 899634, 899698, 899985, 900129, 900328, 900601, 900656, 900800, 900982, 901239, 901425, 901449, 901574, 901644, 901851, 901954, 902095, 902330, 902429, 902577, 902736, 902875, 902973, 903242, 903452, 903587, 903839, 904154, 904238, 904352, 904489, 904607, 904754, 904912, 905027, 905257, 905330, 905486, 905601, 905771, 905871, 905942, 906129, 906260, 906342, 906388, 906466, 906509, 906592, 906636, 906672, 906705, 906772, 906836, 906915, 906934, 906984, 907060, 907061, 907071, 907075, 907102, 907134, 907154, 907197, 907239, 907333, 907368, 907421, 907475, 907552, 907615, 907721, 907755, 907756, 907756, 907771, 907839, 907951, 908031, 908195, 908366, 908412, 908551, 908739, 908825, 908888, 908935, 909136, 909320, 909503, 909686, 909955, 910194, 910554, 910758, 911050, 911221, 911553, 911932, 912182, 912832, 913166, 913537, 913915, 914140, 914523, 914798, 915337, 915899, 916098, 916606, 916989, 917348, 917783, 918411, 918883, 919296, 919736, 919782, 920148, 920570, 920693, 920898, 921127, 921509, 921721, 921938, 922807, 923509, 924114, 924925, 925189, 925709, 926039, 926221, 926800, 927457, 928850, 929726, 930503, 931518, 932552, 933489, 934195, 934761, 935256, 935625, 936029, 936360, 936868, 937151, 937678, 937925, 938216, 938339, 938497, 938609, 938793, 938863, 939094, 939152, 939403, 939597, 939616, 940062, 940288, 940846, 941420, 941822, 942280, 942687, 943099, 943616, 944237, 944920, 945487, 946384, 947339, 948430, 949240, 949790, 950433, 950938, 952060, 953018, 954243, 955107, 955676, 956008, 956533, 957346, 958238, 958876, 960015, 961028, 962123, 962629, 963548, 964834, 965995, 967792, 968968, 969738, 970428, 971437, 972387, 973244, 974341, 975706, 977270, 978353, 979551, 980949, 982537, 983705, 984935, 986885, 989298, 990864, 992318, 993835, 995393, 996418, 997428, 999187, 1001245]
        print("len inds:{}".format(len(inds)))
        df_bars = set_df_labels(
            df_merged,
            pt_level=float(args.pt_level),
            sl_level=float(args.sl_level),
            wait_time=timedelta(seconds=int(args.wait_time)),
            inds=inds,
        )
        # print('final col names {}'.format(df_bars.columns))
        # df_1day_merged.to_csv(os.path.join('../data/test/', os.path.basename(raw_file_name))[:-3])
        num_pt_long = len(df_bars[df_bars['long_label'] == 1])
        num_sl_long = len(df_bars[df_bars['long_label'] == -1])
        num_te_long = len(df_bars[df_bars['long_label'] == 0])
        num_pt_short = len(df_bars[df_bars['short_label'] == 1])
        num_sl_short = len(df_bars[df_bars['short_label'] == -1])
        num_te_short = len(df_bars[df_bars['short_label'] == 0])
        print("{}, shape: {}, num_pt_long: {}, num_sl_long: {}, num_te_long: {}, num_pt_short: {}, num_sl_short: {}, num_te_short: {}".format(
            os.path.basename(file_name), df_bars.shape, num_pt_long, num_sl_long, num_te_long, num_pt_short, num_sl_short, num_te_short))
        save_to_blob(
            df=df_bars,
            datastore=default_datastore,
            path="datasets/df_bars_test",
            file_name="bars_{}".format(os.path.basename(file_name)),
        )
        resultList.append("{}, shape: {}, num_pt_long: {}, num_sl_long: {}, num_te_long: {}, num_pt_short: {}, num_sl_short: {}, num_te_short: {}".format(
            os.path.basename(file_name), df_bars.shape, num_pt_long, num_sl_long, num_te_long, num_pt_short, num_sl_short, num_te_short))

    return resultList


if __name__ == "__main__":

    #     parser = argparse.ArgumentParser(
    #         description="TEST prs"
    #     )

    #     args = parser.parse_args()
    init()
    print(args.file_path)
    run([args.file_path])
